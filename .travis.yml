language: cpp

sudo: required
dist: trusty

os:
  - linux
  - osx

compiler:
  - gcc
#  - clang

cache:
  ccache: true

addons:
  apt:
    sources: [ ubuntu-toolchain-r-test, llvm-toolchain-trusty ]
    packages: [ gcc-7, g++-7, ninja-build, clang ]
  homebrew:
    packages:
    - ninja
#    update: true

matrix:
    include:
        - os: linux
          env: MATRIX_EVAL="export CC=clang-8 CXX=clang++-8 LINUX_ODBC_LIB=libiodbc2-dev OSX_ODBC_LIB=libiodbc"
        - os: linux
          env: MATRIX_EVAL="export CC=gcc-7   CXX=g++-7     LINUX_ODBC_LIB=libiodbc2-dev OSX_ODBC_LIB=libiodbc"
        - os: linux
          env: MATRIX_EVAL="export CC=clang-8 CXX=clang++-8 LINUX_ODBC_LIB=unixodbc-dev OSX_ODBC_LIB=unixodbc"
        - os: linux
          env: MATRIX_EVAL="export CC=gcc-7   CXX=g++-7     LINUX_ODBC_LIB=unixodbc-dev OSX_ODBC_LIB=unixodbc"
        - os: osx
          env: MATRIX_EVAL="export OSX_ODBC_LIB=libiodbc"
        - os: osx
          env: MATRIX_EVAL="export OSX_ODBC_LIB=unixodbc"


install:
  - eval "${MATRIX_EVAL}"
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-add-repository "deb http://archive.ubuntu.com/ubuntu artful main universe"; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then  sudo apt-get update -q > build.log 2>&1 || (cat build.log && exit 1); fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then  sudo apt-get install -y $LINUX_ODBC_LIB libssl-dev binutils libpoco-dev | tee build.log 2>&1 || (cat build.log && exit 1); fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install $OSX_ODBC_LIB; fi

script:
  - mkdir -p build
  - cd build
  - cmake .. -G Ninja -DCMAKE_CXX_COMPILER=`which $CXX` -DCMAKE_C_COMPILER=`which $CC` && ninja all && ninja test
